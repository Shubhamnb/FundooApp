package com.bridge.deckcard.linklist;

public class LinkList<T> {
public LinkedListNode<T> first = null;
public LinkedListNode<T> ptr1, ptr2;
	/**
	 * Insert at the front of the list
	 * @param node
	 */
	public void insert(LinkedListNode<T> node) {
		node.setNext(first);
		first = node;
	}

	/**
	 * Remove from the front of the list
	 * @param node
	 */
	public void remove(){
		if(first.getNext()!=null)
			first = first.getNext();
		else first = null;
	}
	
	/**
	 * Remove from the last of the list
	 * @param node
	 */
	public void removeLast(){
		LinkedListNode<T> temp = first;
		ptr1 = first;
		ptr2 =ptr1.next;
		while (temp.next != null) {
			
		}
		
	}
	
	
	/**
	 * Recursively traverse this list and print the node value
	 * @param node
	 */
	private void printList(LinkedListNode<T> node) {
		System.out.println("Node is " + node.getValue());
		if(node.getNext()!=null) printList(node.getNext());
	}

	public void print(){
		printList(first);
	}
}
